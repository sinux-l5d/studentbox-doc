{"/":{"title":"üë®‚Äçüíª Studentbox documentation","content":"\n_Studentbox_ is a project that aims to make deployment easy for student üë®‚Äçüéì, and management of hosted projects simple for a teacher üë®‚Äçüè´.\n\n# üåç Context\n\nI've realised this project during my BSc (Hons)[^bsc] at [Dundalk Institute of Technology](https://www.dkit.ie/). The curriculum is about _Cloud Computing_, and so this project has to take advantage of different cloud aspects like including scaling, APIs[^api] and automation etc.\n\nSee the [[about-me|About me]] page this know more about the author.\n\n# ü•ú In a nutshell...\n\n_Studentbox_ wants to archive the following goals:\n\n- Host the students' projects in an isolated environment, without impacting other projects or host system\n- Provide a complete environment for the apps supported\n- Be able to deploy in a single command line...\n  - PHP app using MySQL\n  - Node.js app using MongoDB or MySQL\n- The _CLI_[^cli] client should...\n  - work on Linux, Mac and Windows\n  - be easy to setup\n  - be usable by both student and teacher\n- Make possible live-reloading while developing\n\nWhile having the following constraints:\n\n- Hostable on AWS\n- Self-hostable on an on-premise server\n\nYou can access the [[goals]] page to know more about the project's goals.\n\n[^bsc]:\n    **B**achelor of **Sc**ience (**Hon**our**s**) is the 4th year after secondary school (in Ireland).\n    In France, the equivalent year is the 1st year of Master's degree (the 4th year after _Lyc√©e_).\n\n[^api]: **A**pplication **P**rogramming **I**nterface in IT is an abstraction layer to interact with things we don't want to deal manually with. In this curriculum, we're talking about Web APIs (REST with JSON among others).\n[^cli]:\n    **C**ommand **L**ine **I**nterface, as the opposit of Graphical User Interface (GUI) is a text-based interface.\n    On Windows, it's in CMD/PowerShell. On Linux, it's in your favourite terminal \u0026 shell (bash, zsh...)\n","lastmodified":"2022-12-08T14:26:28.216214113Z","tags":null},"/about-me":{"title":"About me","content":"\nMy name is Simon LEONARD. This project has been produced during my 4th year after secondary school/_Lyc√©e_. \n\nWhy am I not writing BSc Hons? And why do I use the French word _Lyc√©e_?\n\nBecause I'm currently a French student, and I'm in a Erasmus+ exchange year in [Dundalk Institute of Technologies](https://www.dkit.ie/) at the time of writing.\\\nAt DkIT I'm following the course _Computing in Cloud Computing_, meanwhile at [Universit√© Savoie Mont-Blanc](https://univ-smb.fr/en) I'm enrolled in the [CMI programme](https://reseau-figure.fr/about-cmi/?lang=en) for IT, which is basically a bundle of BSc + BSc (hons) + MSc + additional courses on 5 years.\n\nSee my [Linkedin](https://linkedin.com/in/simon-l5d) and [Github](https://github.com/sinux-l5d).","lastmodified":"2022-12-08T14:26:28.216214113Z","tags":null},"/project/goals":{"title":"Goals","content":"\nHere I cover everything I _would like_ to see in the final project. The steps to archives sub-goals is described in the [[project/road-map|road map]].\n\n# Back end\n\nThe back end should be either hosted on AWS or an on-premise server.\n\nAmazon's cloud would be useful if one needs to easily scale as more students use it.\nOn another hand, an on-premise server allow flexibility and complete control other data, privacy and hosting.\n\nThis means that I cannot use AWS's specific service, or at least not without increasing development cost.\n\nFinally, an easy/automated installation would save time.\n\n## Isolate process\n\nWe don't want that students' project impact other's by accident or on purpose.\n\nIf a web app crash, is heavily dealing with I/O, or is stuck in a infinite loop, it should impact as little as possible other projects.\n\n## Data exchange\n\nThe API should be bidirectional, for let's say uploading files and getting live logs of the back end.\n\n## Live reload\n\nLive reload is a convenient feature to allow to see changes as soon as a file is saved. In our case, that would mean upload the changed files and eventually restart the webapp.  \n\n## Users \u0026 permissions\n\nStudent and teachers are both users. Teachers can host his own project, for demonstration purpose let's say. He can invite students to register in his class, and manage the projects associated.\n\n## Git integration üí°\n\nUse Git as part of the API, as a backup/rollback system.\nEach project would have a repository.\n\n# CLI\n\nA CLI client for all users. A student should be able to deploy his project, retrieve logs (possibly in live), get link. A teacher has the same rights as student, plus managing resources, users, projects.\n\nBecause most users use Windows, the CLI needs to be cross platform.\n\n# Front end\n\nSimple webapp that allow the same thing as CLI, in a more graphical manner. No install, drag and drop zip/archive to deploy. \nNote for the ZIP: mind that code might be at root of the archive, not in a top-level directory.\n\nIt should present live logs, just like CLI.\n","lastmodified":"2022-12-08T14:26:28.216214113Z","tags":null}}