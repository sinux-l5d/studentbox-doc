<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>üë®‚Äçüíª Studentbox documentation on</title><link>https://sinux-l5d.github.io/studentbox-doc/</link><description>Recent content in üë®‚Äçüíª Studentbox documentation on</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><atom:link href="https://sinux-l5d.github.io/studentbox-doc/index.xml" rel="self" type="application/rss+xml"/><item><title>2023-02-10</title><link>https://sinux-l5d.github.io/studentbox-doc/journal/2023-02-10/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sinux-l5d.github.io/studentbox-doc/journal/2023-02-10/</guid><description>Today I start experimenting with the Podman API through its library in Go. I&amp;rsquo;m not trying Docker API, because I know I want rootless for security measures (thought it&amp;rsquo;s doable, but wasn&amp;rsquo;t so easy last time I checked).</description></item><item><title>2023-02-12</title><link>https://sinux-l5d.github.io/studentbox-doc/journal/2023-02-12/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sinux-l5d.github.io/studentbox-doc/journal/2023-02-12/</guid><description>Still on Podman API. Podman don&amp;rsquo;t work like docker: the command line directly take care of the operations, whereas the in docker the command line &amp;ldquo;translate&amp;rdquo; the command in a API call to the Docker Engine through unix socket.</description></item><item><title>2023-02-14</title><link>https://sinux-l5d.github.io/studentbox-doc/journal/2023-02-14/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sinux-l5d.github.io/studentbox-doc/journal/2023-02-14/</guid><description>Started coding. I have a library that list containers owned by my app (using containers labels) and run a new one (dummy, busybox for now).</description></item><item><title>2023-02-16</title><link>https://sinux-l5d.github.io/studentbox-doc/journal/2023-02-16/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sinux-l5d.github.io/studentbox-doc/journal/2023-02-16/</guid><description>Because I can&amp;rsquo;t make a statically linked binary, I will stick with an alpine container for now. Post on stackoverflow: https://stackoverflow.</description></item><item><title>2023-02-17</title><link>https://sinux-l5d.github.io/studentbox-doc/journal/2023-02-17/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sinux-l5d.github.io/studentbox-doc/journal/2023-02-17/</guid><description>I had a problem this morning: each container will have a different name, and therefore it won&amp;rsquo;t be possible for a proxy container to know at build time other containers name.</description></item><item><title>2023-02-21</title><link>https://sinux-l5d.github.io/studentbox-doc/journal/2023-02-21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sinux-l5d.github.io/studentbox-doc/journal/2023-02-21/</guid><description>Enhancing the CLI by importing new module https://github.com/urfave/cli</description></item><item><title>2023-02-23</title><link>https://sinux-l5d.github.io/studentbox-doc/journal/2023-02-23/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sinux-l5d.github.io/studentbox-doc/journal/2023-02-23/</guid><description>I just made progress: Apache and PHP container talked to each other inside of a pod. Also, I statically compiled my app thanks to https://github.</description></item><item><title>2023-02-26</title><link>https://sinux-l5d.github.io/studentbox-doc/journal/2023-02-26/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sinux-l5d.github.io/studentbox-doc/journal/2023-02-26/</guid><description>Add first &amp;ldquo;runtime&amp;rdquo;, which is a set of container to run a certain type of project. First one is a LAMP (apache php mysql).</description></item><item><title>2023-02-27</title><link>https://sinux-l5d.github.io/studentbox-doc/journal/2023-02-27/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sinux-l5d.github.io/studentbox-doc/journal/2023-02-27/</guid><description>I&amp;rsquo;ve managed to set up a workflow to build runtime pods (so a set of containerfile) in a test repository. It build and publish to the ghcr.</description></item><item><title>2023-02-28</title><link>https://sinux-l5d.github.io/studentbox-doc/journal/2023-02-28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sinux-l5d.github.io/studentbox-doc/journal/2023-02-28/</guid><description>RDV Stephen: final documentation: write the different steps I&amp;rsquo;ve been through (use journal) (eg lib, then cli, then server, then client)</description></item><item><title>2023-03-02</title><link>https://sinux-l5d.github.io/studentbox-doc/journal/2023-03-02/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sinux-l5d.github.io/studentbox-doc/journal/2023-03-02/</guid><description>Today I&amp;rsquo;m working on automating binary creation and container binary with a Makefile and workflow, and embed version number in go binary (with go build -ldflags .</description></item><item><title>2023-03-25</title><link>https://sinux-l5d.github.io/studentbox-doc/journal/2023-03-25/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sinux-l5d.github.io/studentbox-doc/journal/2023-03-25/</guid><description>I&amp;rsquo;m continuing the ethical report started earlier this week.</description></item><item><title>2023-03-28</title><link>https://sinux-l5d.github.io/studentbox-doc/journal/2023-03-28/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sinux-l5d.github.io/studentbox-doc/journal/2023-03-28/</guid><description>After reading this article from go.dev, I know I should extract the context of my internal lib from the Mangager struct.</description></item><item><title>2023-04-21</title><link>https://sinux-l5d.github.io/studentbox-doc/journal/2023-04-21/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sinux-l5d.github.io/studentbox-doc/journal/2023-04-21/</guid><description>Today I&amp;rsquo;m refactoring to use pods directly. It&amp;rsquo;s complicated because the documentation is not self-explanatory, so I often have to dig into podman&amp;rsquo;s cli code.</description></item><item><title>2023-04-22</title><link>https://sinux-l5d.github.io/studentbox-doc/journal/2023-04-22/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sinux-l5d.github.io/studentbox-doc/journal/2023-04-22/</guid><description>Continuing yesterday&amp;rsquo;s work of refactoring to use pods. It&amp;rsquo;s been tough to find how to store the configuration for pods, as some config can be per image or shared between images.</description></item><item><title>2023-04-24</title><link>https://sinux-l5d.github.io/studentbox-doc/journal/2023-04-24/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sinux-l5d.github.io/studentbox-doc/journal/2023-04-24/</guid><description>Fixed issue from [[journal/2023-04-22|2023-04-22]] with created directories for container. Now it looks like this:
1 2 3 4 5 data ‚îî‚îÄ‚îÄ user ‚îî‚îÄ‚îÄ test-lamp ‚îú‚îÄ‚îÄ db ‚îî‚îÄ‚îÄ html I noticed my MySQL container exited with status 1.</description></item><item><title>2023-05-06</title><link>https://sinux-l5d.github.io/studentbox-doc/journal/2023-05-06/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sinux-l5d.github.io/studentbox-doc/journal/2023-05-06/</guid><description>Today I&amp;rsquo;m implementing the EnvVar modifiers I&amp;rsquo;ve been writing last time. It works, my MariaDB container now has a default user, default database, and generate a password (:password modifier) for both root and user.</description></item><item><title>2023-05-08</title><link>https://sinux-l5d.github.io/studentbox-doc/journal/2023-05-08/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sinux-l5d.github.io/studentbox-doc/journal/2023-05-08/</guid><description>I&amp;rsquo;ve found a simple solution for my problem the other day: I&amp;rsquo;m publishing port 80 for the pod, so we just need one container listening to port 80 within the pod.</description></item><item><title>About me üôã‚Äç‚ôÇÔ∏è</title><link>https://sinux-l5d.github.io/studentbox-doc/about-me/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sinux-l5d.github.io/studentbox-doc/about-me/</guid><description>My name is Simon LEONARD. This project has been produced during my 4th year after secondary school/Lyc√©e.
Why am I not writing BSc Hons?</description></item><item><title>Goals üéØ</title><link>https://sinux-l5d.github.io/studentbox-doc/project/goals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sinux-l5d.github.io/studentbox-doc/project/goals/</guid><description>Back end The back end should be either hosted on AWS or an on-premise server.
Amazon&amp;rsquo;s cloud would be useful if one needs to easily scale as more students use it.</description></item><item><title>GraphQL</title><link>https://sinux-l5d.github.io/studentbox-doc/research/api/graphql/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sinux-l5d.github.io/studentbox-doc/research/api/graphql/</guid><description>[!quote] According to the official website
GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data.</description></item><item><title>gRPC</title><link>https://sinux-l5d.github.io/studentbox-doc/research/api/grpc/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sinux-l5d.github.io/studentbox-doc/research/api/grpc/</guid><description>gRPC is &amp;ldquo;a high performance, open source universal RPC framework&amp;rdquo;1. RPC stands for Remote Procedure Call, which is a kind of API that abstracts the complexity of making calls to a remote API by providing to the developer functions that works like if it was local2.</description></item><item><title>JSON</title><link>https://sinux-l5d.github.io/studentbox-doc/research/api/json/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sinux-l5d.github.io/studentbox-doc/research/api/json/</guid><description>[!quote] From the official website
JSON¬†(JavaScript Object Notation) is a lightweight data-interchange format. It is easy for humans to read and write.</description></item><item><title>Protocol Buffers</title><link>https://sinux-l5d.github.io/studentbox-doc/research/api/protobuf/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sinux-l5d.github.io/studentbox-doc/research/api/protobuf/</guid><description>Protobuf or Protocol Buffers is a binary serialisation format that needs type definition beforehand. It&amp;rsquo;s created by Google. This allows to omit structure from the data serialised, as client and server know what it is about.</description></item><item><title>REST</title><link>https://sinux-l5d.github.io/studentbox-doc/research/api/rest/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sinux-l5d.github.io/studentbox-doc/research/api/rest/</guid><description>REST (Representational state transfer) is a style of software architecture that takes advantage of HTTP(S):
The path represent a resource A verb represent what kind of operation has to be done Headers are used for various things, like authorisation token The body for the actual data, when needed, nowadays mostly [[research/api/json]] for APIs The return status tells quickly if everything happened as expected Let&amp;rsquo;s say we have a database of recipes.</description></item><item><title>Road map üó∫Ô∏è</title><link>https://sinux-l5d.github.io/studentbox-doc/project/road-map/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sinux-l5d.github.io/studentbox-doc/project/road-map/</guid><description>Research üîé This section treats about everything that needs to be researched before starting to code.
API Compare API types, knowing I want to transfer files, and need live-capabilities.</description></item></channel></rss>